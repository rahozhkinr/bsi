$PAT = ''
$ADOAuthenicationHeader = @{Authorization = 'Basic ' + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($PAT)")) }

$OrganizationName = ""
$UriOrganization = "https://dev.azure.com/$($OrganizationName)/"
$ProjectName = ""
$WorkItemType = "task"

#List projects
#$UriAccount = $UriOrganization + "_apis/projects?api-version=6.0"
#Invoke-RestMethod -Uri $UriAccount -Method Get -Headers $ADOAuthenicationHeader 

#List work item task
#$UriWorkItems = $UriOrganization + $ProjectName + "/_apis/wit/workitems/$" + $WorkItemType + "?api-version=6.0"
#$UriWorkItems = $UriOrganization + $ProjectName + "/_apis/wit/workitemsbatch?api-version=6.0"
#Invoke-RestMethod -Uri $UriWorkItems -Method POST -Headers $ADOAuthenicationHeader -ContentType "application/json"

$UriWorkItems = $UriOrganization + $ProjectName + "/_apis/wit/wiql?api-version=5.0"
Write-Host 'UriWorkItems: ' $UriWorkItems
$request = @{  
    "query" = "Select [System.Id], [System.Title], [System.State], [System.Tags], [System.TeamProject] From WorkItems Where [System.TeamProject] = 'BackUpDevOpsADO' and [System.WorkItemType] = 'Task' order by [Microsoft.VSTS.Common.Priority] asc, [System.CreatedDate] desc "
}
$requestJson = $request | ConvertTo-Json

Invoke-RestMethod -Method Post -ContentType application/json -Uri $UriWorkItems -Headers $ADOAuthenicationHeader -Body $requestJson -OutFile workitems.json
$witJson = ConvertFrom-Json "$(Get-Content workitems.json)"

Write-Host "Downloading data of tasks and creating JSON files for each task"
$count = 0
$workItems = $(foreach ($wit in $witJson.workItems)
{
    if ($count -eq 5){
        break
    }
    $count++
    $idNumber = $wit.id
    $urlTemp = $wit.url
    $urlWorkItem = "$urlTemp`?`$expand=all"
    Write-Host 'urlWorkItem of each work item: ' $urlWorkItem
    Invoke-RestMethod -ContentType application/json -Method GET -Uri "$urlWorkItem" -Headers $ADOAuthenicationHeader -OutFile "./tasks/workItem$idNumber"
    $dataWorkItemJson = ConvertFrom-Json "$(Get-Content ./tasks/workItem$idNumber)"
    Write-Host "Relations: " $dataWorkItemJson.relations.rel
    Write-Host 'Project: ' $dataWorkItemJson.fields.'System.TeamProject'

    if($dataWorkItemJson.fields.'System.TeamProject' -eq "BackUpDevOpsADO"){
        Write-Host "That's BackUpDevOpsADO project work items"

    }

    $numberAttach = 0
    foreach($relation in $dataWorkItemJson.relations){
        if($relation.rel -eq "AttachedFile"){
            $numberAttach++
            $attachUrl = $relation.url
            Write-Host "Downloading attaches from: "$attachUrl
            Invoke-WebRequest -Uri "$attachUrl" -Headers $ADOAuthenicationHeader -OutFile ./tasks/attach$idNumber"_"$numberAttach
        }
    }

    Write-Host $dataWorkItemJson._links.workItemComments
    $commentUrl = $dataWorkItemJson._links.workItemComments.href
    Write-Host "Downloading comments from: "$commentUrl
    Invoke-RestMethod -ContentType application/json -Method GET -Uri "$commentUrl" -Headers $ADOAuthenicationHeader -OutFile ./tasks/comment$idNumber
})

Compress-Archive -Path ./tasks -DestinationPath tasks.zip -Update
